#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        IME_ON {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <19 20>;
            layers = <0>;
        };

        IME_OFF {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <11 12>;
            layers = <0>;
        };

        win_mv_right {
            bindings = <&winmvright>;
            key-positions = <7 8>;
            slow-release;
            layers = <0>;
        };

        win_mv_left {
            bindings = <&winmvleft>;
            key-positions = <1 2>;
            slow-release;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <23 24>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <31 32>;
            layers = <0>;
        };

        task_view {
            bindings = <&kp LG(TAB)>;
            key-positions = <13 18>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <20 21>;
            layers = <0>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <10 11>;
            layers = <0>;
        };
    };

    macros {
        DBLSFT: DBLSFT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "DBLSFT";
        };

        DBLCTL: DBLCTL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LCTRL>;
            label = "DBLCTL";
        };

        winmvright: winmvright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp RIGHT>,
                <&macro_release>,
                <&kp RIGHT &kp LEFT_WIN>;

            label = "WINMVRIGHT";
        };

        winmvleft: winmvleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT>,
                <&macro_release>,
                <&kp LEFT &kp LEFT_WIN>;

            label = "WINMVLEFT";
        };
    };

    behaviors {
        BSDEL: BSDEL {
            compatible = "zmk,behavior-mod-morph";
            label = "BSDEL";
            bindings = <&kp BSPC>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        F1_F11: F1_F11 {
            compatible = "zmk,behavior-mod-morph";
            label = "F1_F11";
            bindings = <&kp F1>, <&kp F11>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        F2_F12: F2_F12 {
            compatible = "zmk,behavior-mod-morph";
            label = "F2_F12";
            bindings = <&kp F2>, <&kp F12>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lt_bsdel: lt_bsdel {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BSDEL";
            bindings = <&mo>, <&BSDEL>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q           &kp W         &kp MINUS     &kp R      &kp Z                                                 &kp X        &kp D  &lt 1 E  &lt 2 L    &kp P
&kp I           &kp T         &kp A         &kp K      &kp G             &kp LS(LC(M))       &lt 6 ESC       &kp H        &kp N  &kp O    &kp U      &kp S
&kp F           &kp PERIOD    &kp C         &kp M      &kp B             &kp LANGUAGE_2      &kp LANGUAGE_1  &kp J        &kp Y  &kp V    &kp COMMA  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &mkp LCLK  &mt LSHIFT SPACE  &mt LCTRL TAB       &lt_bsdel 5 0   &lt 4 ENTER                             &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp LCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &mo 2   &mo 3       &trans  &trans                             &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SNIPE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUMBER {
            bindings = <
&F1_F11               &F2_F12       &kp F3        &kp F4        &kp F5                                                  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&kp LEFT_PARENTHESIS  &kp SLASH     &kp ASTERISK  &kp MINUS     &kp PLUS              &kp LC(NUMBER_0)      &trans      &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &kp RIGHT_PARENTHESIS
&kp NUMBER_1          &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5          &kp COMMA             &kp DOLLAR  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans                &trans        &trans        &mkp RCLK     &mt LEFT_SHIFT EQUAL  &mt LCTRL PERIOD      &trans      &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(MINUS) LC(PLUS)>;
        };

        SYMBOL {
            bindings = <
&kp LEFT_BRACE        &kp GRAVE        &kp SQT        &kp DOUBLE_QUOTES  &kp CARET                                    &kp HOME       &kp PAGE_DOWN   &kp PAGE_UP   &kp END           &kp RIGHT_BRACE
&kp LEFT_PARENTHESIS  &kp PERCENT      &kp AMPERSAND  &kp HASH           &kp PIPE       &none              &trans     &kp LEFT       &kp DOWN        &kp UP_ARROW  &kp RIGHT         &kp RIGHT_PARENTHESIS
&kp LEFT_BRACKET      &kp EXCLAMATION  &kp AT_SIGN    &kp DOLLAR         &kp BACKSLASH  &kp SEMICOLON      &kp COLON  &kp LESS_THAN  &kp UNDERSCORE  &kp TILDE     &kp GREATER_THAN  &kp RIGHT_BRACKET
&trans                &trans           &trans         &mkp MCLK          &DBLSFT        &DBLCTL            &trans     &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SYSTEM {
            bindings = <
&trans        &trans        &trans        &trans        &out OUT_USB                          &out OUT_USB  &trans        &trans        &trans        &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR      &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans        &trans        &trans        &trans        &out OUT_BLE  &trans          &trans  &out OUT_BLE  &trans        &trans        &trans        &trans
&bootloader   &trans        &trans        &trans        &trans        &trans          &trans  &trans                                                  &bootloader
            >;
        };
    };
};
